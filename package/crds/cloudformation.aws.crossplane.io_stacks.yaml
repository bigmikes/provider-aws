---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: stacks.cloudformation.aws.crossplane.io
spec:
  group: cloudformation.aws.crossplane.io
  names:
    categories:
    - crossplane
    - managed
    - aws
    kind: Stack
    listKind: StackList
    plural: stacks
    singular: stack
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Stack is the Schema for the Stacks API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: StackSpec defines the desired state of Stack
            properties:
              deletionPolicy:
                default: Delete
                description: DeletionPolicy specifies what will happen to the underlying
                  external when this managed resource is deleted - either "Delete"
                  or "Orphan" the external resource.
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                description: StackParameters defines the desired state of Stack
                properties:
                  capabilities:
                    description: "In some cases, you must explicitly acknowledge that
                      your stack template contains certain capabilities in order for
                      CloudFormation to create the stack. \n * CAPABILITY_IAM and
                      CAPABILITY_NAMED_IAM Some stack templates might include resources
                      that can affect permissions in your Amazon Web Services account;
                      for example, by creating new Identity and Access Management
                      (IAM) users. For those stacks, you must explicitly acknowledge
                      this by specifying one of these capabilities. The following
                      IAM resources require you to specify either the CAPABILITY_IAM
                      or CAPABILITY_NAMED_IAM capability. If you have IAM resources,
                      you can specify either capability. If you have IAM resources
                      with custom names, you must specify CAPABILITY_NAMED_IAM. If
                      you don't specify either of these capabilities, CloudFormation
                      returns an InsufficientCapabilities error. If your stack template
                      contains these resources, we recommend that you review all permissions
                      associated with them and edit their permissions if necessary.
                      AWS::IAM::AccessKey (https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-accesskey.html)
                      AWS::IAM::Group (https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-group.html)
                      AWS::IAM::InstanceProfile (https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-instanceprofile.html)
                      AWS::IAM::Policy (https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-policy.html)
                      AWS::IAM::Role (https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-role.html)
                      AWS::IAM::User (https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-user.html)
                      AWS::IAM::UserToGroupAddition (https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-addusertogroup.html)
                      For more information, see Acknowledging IAM Resources in CloudFormation
                      Templates (http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-iam-template.html#capabilities).
                      \n * CAPABILITY_AUTO_EXPAND Some template contain macros. Macros
                      perform custom processing on templates; this can include simple
                      actions like find-and-replace operations, all the way to extensive
                      transformations of entire templates. Because of this, users
                      typically create a change set from the processed template, so
                      that they can review the changes resulting from the macros before
                      actually creating the stack. If your stack template contains
                      one or more macros, and you choose to create a stack directly
                      from the processed template, without first reviewing the resulting
                      changes in a change set, you must acknowledge this capability.
                      This includes the AWS::Include (http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/create-reusable-transform-function-snippets-and-add-to-your-template-with-aws-include-transform.html)
                      and AWS::Serverless (http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/transform-aws-serverless.html)
                      transforms, which are macros hosted by CloudFormation. If you
                      want to create a stack from a stack template that contains macros
                      and nested stacks, you must create the stack directly from the
                      template using this capability. You should only create stacks
                      directly from a stack template that contains macros if you know
                      what processing the macro performs. Each macro relies on an
                      underlying Lambda service function for processing stack templates.
                      Be aware that the Lambda function owner can update the function
                      operation without CloudFormation being notified. For more information,
                      see Using CloudFormation Macros to Perform Custom Processing
                      on Templates (http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-macros.html)."
                    items:
                      type: string
                    type: array
                  clientRequestToken:
                    description: "A unique identifier for this CreateStack request.
                      Specify this token if you plan to retry requests so that CloudFormation
                      knows that you're not attempting to create a stack with the
                      same name. You might retry CreateStack requests to ensure that
                      CloudFormation successfully received them. \n All events triggered
                      by a given stack operation are assigned the same client request
                      token, which you can use to track operations. For example, if
                      you execute a CreateStack operation with the token token1, then
                      all the StackEvents generated by that operation will have ClientRequestToken
                      set as token1. \n In the console, stack operations display the
                      client request token on the Events tab. Stack operations that
                      are initiated from the console use the token format Console-StackOperation-ID,
                      which helps you easily identify the stack operation . For example,
                      if you create a stack using the console, each stack event would
                      be assigned the same token in the following format: Console-CreateStack-7f59c3cf-00d2-40c7-b2ff-e75db0987002."
                    type: string
                  disableRollback:
                    description: "Set to true to disable rollback of the stack if
                      stack creation failed. You can specify either DisableRollback
                      or OnFailure, but not both. \n Default: false"
                    type: boolean
                  enableTerminationProtection:
                    description: "Whether to enable termination protection on the
                      specified stack. If a user attempts to delete a stack with termination
                      protection enabled, the operation fails and the stack remains
                      unchanged. For more information, see Protecting a Stack From
                      Being Deleted (http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-protect-stacks.html)
                      in the CloudFormation User Guide. Termination protection is
                      disabled on stacks by default. \n For nested stacks (http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-nested-stacks.html),
                      termination protection is set on the root stack and cannot be
                      changed directly on the nested stack."
                    type: boolean
                  notificationARNs:
                    description: The Simple Notification Service (SNS) topic ARNs
                      to publish stack related events. You can find your SNS topic
                      ARNs using the SNS console or your Command Line Interface (CLI).
                    items:
                      type: string
                    type: array
                  onFailure:
                    description: "Determines what action will be taken if stack creation
                      fails. This must be one of: DO_NOTHING, ROLLBACK, or DELETE.
                      You can specify either OnFailure or DisableRollback, but not
                      both. \n Default: ROLLBACK"
                    type: string
                  parameters:
                    description: A list of Parameter structures that specify input
                      parameters for the stack. For more information, see the Parameter
                      (https://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/API_Parameter.html)
                      data type.
                    items:
                      properties:
                        parameterKey:
                          type: string
                        parameterValue:
                          type: string
                        resolvedValue:
                          type: string
                        usePreviousValue:
                          type: boolean
                      type: object
                    type: array
                  region:
                    description: Region is which region the Stack will be created.
                    type: string
                  resourceTypes:
                    description: "The template resource types that you have permissions
                      to work with for this create stack action, such as AWS::EC2::Instance,
                      AWS::EC2::*, or Custom::MyCustomInstance. Use the following
                      syntax to describe template resource types: AWS::* (for all
                      Amazon Web Services resources), Custom::* (for all custom resources),
                      Custom::logical_ID (for a specific custom resource), AWS::service_name::*
                      (for all resources of a particular Amazon Web Services service),
                      and AWS::service_name::resource_logical_ID (for a specific Amazon
                      Web Services resource). \n If the list of resource types doesn't
                      include a resource that you're creating, the stack creation
                      fails. By default, CloudFormation grants permissions to all
                      resource types. Identity and Access Management (IAM) uses this
                      parameter for CloudFormation-specific condition keys in IAM
                      policies. For more information, see Controlling Access with
                      Identity and Access Management (https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-iam-template.html)."
                    items:
                      type: string
                    type: array
                  roleARN:
                    description: "The Amazon Resource Name (ARN) of an Identity and
                      Access Management (IAM) role that CloudFormation assumes to
                      create the stack. CloudFormation uses the role's credentials
                      to make calls on your behalf. CloudFormation always uses this
                      role for all future operations on the stack. As long as users
                      have permission to operate on the stack, CloudFormation uses
                      this role even if the users don't have permission to pass it.
                      Ensure that the role grants least privilege. \n If you don't
                      specify a value, CloudFormation uses the role that was previously
                      associated with the stack. If no role is available, CloudFormation
                      uses a temporary session that is generated from your user credentials."
                    type: string
                  rollbackConfiguration:
                    description: The rollback triggers for CloudFormation to monitor
                      during stack creation and updating operations, and for the specified
                      monitoring period afterwards.
                    properties:
                      monitoringTimeInMinutes:
                        format: int64
                        type: integer
                      rollbackTriggers:
                        items:
                          properties:
                            arn:
                              type: string
                            type_:
                              type: string
                          type: object
                        type: array
                    type: object
                  stackName:
                    description: "The name that is associated with the stack. The
                      name must be unique in the Region in which you are creating
                      the stack. \n A stack name can contain only alphanumeric characters
                      (case sensitive) and hyphens. It must start with an alphabetical
                      character and cannot be longer than 128 characters."
                    type: string
                  stackPolicyBody:
                    description: Structure containing the stack policy body. For more
                      information, go to Prevent Updates to Stack Resources (https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/protect-stack-resources.html)
                      in the CloudFormation User Guide. You can specify either the
                      StackPolicyBody or the StackPolicyURL parameter, but not both.
                    type: string
                  stackPolicyURL:
                    description: 'Location of a file containing the stack policy.
                      The URL must point to a policy (maximum size: 16 KB) located
                      in an S3 bucket in the same Region as the stack. You can specify
                      either the StackPolicyBody or the StackPolicyURL parameter,
                      but not both.'
                    type: string
                  tags:
                    description: Key-value pairs to associate with this stack. CloudFormation
                      also propagates these tags to the resources created in the stack.
                      A maximum number of 50 tags can be specified.
                    items:
                      properties:
                        key:
                          type: string
                        value:
                          type: string
                      type: object
                    type: array
                  templateBody:
                    description: "Structure containing the template body with a minimum
                      length of 1 byte and a maximum length of 51,200 bytes. For more
                      information, go to Template Anatomy (https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html)
                      in the CloudFormation User Guide. \n Conditional: You must specify
                      either the TemplateBody or the TemplateURL parameter, but not
                      both."
                    type: string
                  templateURL:
                    description: "Location of file containing the template body. The
                      URL must point to a template (max size: 460,800 bytes) that
                      is located in an Amazon S3 bucket or a Systems Manager document.
                      For more information, go to the Template Anatomy (https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html)
                      in the CloudFormation User Guide. \n Conditional: You must specify
                      either the TemplateBody or the TemplateURL parameter, but not
                      both."
                    type: string
                  timeoutInMinutes:
                    description: The amount of time that can pass before the stack
                      status becomes CREATE_FAILED; if DisableRollback is not set
                      or is set to false, the stack will be rolled back.
                    format: int64
                    type: integer
                required:
                - region
                - stackName
                type: object
              providerConfigRef:
                default:
                  name: default
                description: ProviderConfigReference specifies how the provider that
                  will be used to create, observe, update, and delete this managed
                  resource should be configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              providerRef:
                description: 'ProviderReference specifies the provider that will be
                  used to create, observe, update, and delete this managed resource.
                  Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`'
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: PublishConnectionDetailsTo specifies the connection secret
                  config which contains a name, metadata and a reference to secret
                  store config to which any connection details for this managed resource
                  should be written. Connection details frequently include the endpoint,
                  username, and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: SecretStoreConfigRef specifies which secret store
                      config should be used for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: Annotations are the annotations to be added to
                          connection secret. - For Kubernetes secrets, this will be
                          used as "metadata.annotations". - It is up to Secret Store
                          implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: Labels are the labels/tags to be added to connection
                          secret. - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store
                          types.
                        type: object
                      type:
                        description: Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: WriteConnectionSecretToReference specifies the namespace
                  and name of a Secret to which any connection details for this managed
                  resource should be written. Connection details frequently include
                  the endpoint, username, and password required to connect to the
                  managed resource. This field is planned to be replaced in a future
                  release in favor of PublishConnectionDetailsTo. Currently, both
                  could be set independently and connection details would be published
                  to both without affecting each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
          status:
            description: StackStatus defines the observed state of Stack.
            properties:
              atProvider:
                description: StackObservation defines the observed state of Stack
                properties:
                  stackID:
                    description: Unique identifier of the stack.
                    type: string
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time this condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: A Message containing details about this condition's
                        last transition from one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: Type of this condition. At most one of each condition
                        type may apply to a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
